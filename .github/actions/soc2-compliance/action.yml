name: "SOC 2 Compliance Audit"
description: "Runs automated checks, collects evidence, and exports artifacts mapped to AICPA Trust Services Criteria for SOC 2 compliance."
author: "Trevor Bowman"
branding:
  icon: "shield"
  color: "green"

inputs:
  controls-file:
    description: "Path to the YAML or JSON file containing mapped Trust Services Criteria (e.g., controls-matrix.yml)"
    required: false
    default: "controls/controls-matrix.yml"

  output-dir:
    description: "Directory to save evidence and compliance artifacts"
    required: false
    default: "artifacts"

  run-scorecard:
    description: "Run OpenSSF Scorecard as part of audit"
    required: false
    default: "true"

  run-trivy:
    description: "Run Trivy vulnerability and SBOM scan"
    required: false
    default: "true"

  verbose:
    description: "Enable verbose logging"
    required: false
    default: "false"

outputs:
  scorecard-results:
    description: "Path to Scorecard results JSON file"
  trivy-report:
    description: "Path to Trivy SBOM or vulnerability report"
  audit-summary:
    description: "Path to generated audit summary file (Markdown or JSON)"

runs:
  using: "composite"
  steps:
    - name: Setup audit environment
      shell: bash
      run: |
        echo "🔧 Setting up SOC 2 audit environment"
        mkdir -p "${{ inputs.output-dir }}"

    - name: Run Scorecard (optional)
      if: ${{ inputs.run-scorecard == 'true' }}
      shell: bash
      run: |
        echo "🏁 Running OpenSSF Scorecard..."
        curl -sL https://github.com/ossf/scorecard/releases/latest/download/scorecard-linux-amd64 -o scorecard
        chmod +x scorecard
        sudo mv scorecard /usr/local/bin/scorecard
        scorecard --repo="$GITHUB_REPOSITORY" --format=json > "${{ inputs.output-dir }}/scorecard-results.json"
        echo "scorecard-results=${{ inputs.output-dir }}/scorecard-results.json" >> "$GITHUB_OUTPUT"

    - name: Run Trivy Scan (optional)
      if: ${{ inputs.run-trivy == 'true' }}
      shell: bash
      run: |
        echo "🧪 Running Trivy SBOM and vulnerability scan..."
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
        trivy fs --scanners vuln,config,secret,license --format json --output "${{ inputs.output-dir }}/trivy-report.json" .
        echo "trivy-report=${{ inputs.output-dir }}/trivy-report.json" >> "$GITHUB_OUTPUT"

    - name: Generate Audit Summary
      shell: bash
      run: |
        echo "📝 Generating SOC 2 audit summary..."
        SUMMARY_FILE="${{ inputs.output-dir }}/audit-summary.md"
        echo "# SOC 2 Compliance Audit Summary" > "$SUMMARY_FILE"
        echo "- Date: $(date)" >> "$SUMMARY_FILE"
        echo "- Repository: $GITHUB_REPOSITORY" >> "$SUMMARY_FILE"
        echo "- Scorecard: ${{ inputs.output-dir }}/scorecard-results.json" >> "$SUMMARY_FILE"
        echo "- Trivy: ${{ inputs.output-dir }}/trivy-report.json" >> "$SUMMARY_FILE"
        echo "- Controls File: ${{ inputs.controls-file }}" >> "$SUMMARY_FILE"
        echo "audit-summary=$SUMMARY_FILE" >> "$GITHUB_OUTPUT"

    - name: List artifacts
      shell: bash
      run: |
        echo "📂 Output Directory Contents:"
        ls -lah "${{ inputs.output-dir }}"
